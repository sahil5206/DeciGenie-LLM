name: Debug CI/CD Issues

on:
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to debug'
        required: true
        default: 'all'
        type: choice
        options:
        - all
        - frontend
        - llm-query-service
        - document-ingestion

jobs:
  debug:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: decigenie_test
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: System Information
      run: |
        echo "=== System Information ==="
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Working directory: $(pwd)"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref }}"
        echo "Event: ${{ github.event_name }}"
        echo "Runner OS: $(uname -a)"
        echo "Available memory: $(free -h || echo 'Memory info not available')"
        echo "Disk space: $(df -h || echo 'Disk info not available')"

    - name: Repository Structure
      run: |
        echo "=== Repository Structure ==="
        echo "Root directory contents:"
        ls -la
        echo ""
        echo "Service directories:"
        for dir in frontend llm-query-service document-ingestion; do
          if [ -d "$dir" ]; then
            echo "✓ $dir exists"
            echo "  Contents:"
            ls -la "$dir" | head -10
            if [ -f "$dir/package.json" ]; then
              echo "  Package.json exists"
              echo "  Name: $(node -p "require('./$dir/package.json').name")"
              echo "  Version: $(node -p "require('./$dir/package.json').version")"
              echo "  Test script: $(node -p "require('./$dir/package.json').scripts.test || 'Not found'")"
            else
              echo "  ✗ package.json missing"
            fi
          else
            echo "✗ $dir missing"
          fi
          echo ""
        done

    - name: Debug Frontend
      if: github.event.inputs.service == 'all' || github.event.inputs.service == 'frontend'
      working-directory: ./frontend
      run: |
        echo "=== Frontend Debug ==="
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo ""
        echo "Package.json contents:"
        cat package.json
        echo ""
        echo "Installing dependencies..."
        npm install --verbose
        echo ""
        echo "Running tests with maximum verbosity..."
        npm test -- --watchAll=false --passWithNoTests --verbose --no-coverage
      env:
        CI: true
        REACT_APP_API_URL: http://localhost:8000

    - name: Debug LLM Query Service
      if: github.event.inputs.service == 'all' || github.event.inputs.service == 'llm-query-service'
      working-directory: ./llm-query-service
      run: |
        echo "=== LLM Query Service Debug ==="
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo ""
        echo "Package.json contents:"
        cat package.json
        echo ""
        echo "Jest config:"
        cat jest.config.js
        echo ""
        echo "Test files:"
        find . -name "*.test.js" -o -name "*.spec.js" | head -10
        echo ""
        echo "Installing dependencies..."
        npm install --verbose
        echo ""
        echo "Running tests with maximum verbosity..."
        npm test -- --watchAll=false --passWithNoTests --verbose --no-coverage
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:password@localhost:5432/decigenie_test

    - name: Debug Document Ingestion Service
      if: github.event.inputs.service == 'all' || github.event.inputs.service == 'document-ingestion'
      working-directory: ./document-ingestion
      run: |
        echo "=== Document Ingestion Service Debug ==="
        echo "Current directory: $(pwd)"
        echo "Directory contents:"
        ls -la
        echo ""
        echo "Package.json contents:"
        cat package.json
        echo ""
        echo "Jest config:"
        cat jest.config.js
        echo ""
        echo "Test files:"
        find . -name "*.test.js" -o -name "*.spec.js" | head -10
        echo ""
        echo "Installing dependencies..."
        npm install --verbose
        echo ""
        echo "Running tests with maximum verbosity..."
        npm test -- --watchAll=false --passWithNoTests --verbose --no-coverage
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:password@localhost:5432/decigenie_test 