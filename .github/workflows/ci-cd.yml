name: Simple CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_DB: decigenie_test
          POSTGRES_USER: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Debug Environment
      run: |
        echo "=== Environment Debug Info ==="
        echo "Node version: $(node --version)"
        echo "NPM version: $(npm --version)"
        echo "Working directory: $(pwd)"
        echo "Repository: ${{ github.repository }}"
        echo "Branch: ${{ github.ref }}"
        echo "Event: ${{ github.event_name }}"
        echo "=== Directory Structure ==="
        ls -la
        echo "=== Service Directories ==="
        for dir in frontend llm-query-service document-ingestion; do
          if [ -d "$dir" ]; then
            echo "✓ $dir exists"
            ls -la "$dir" | head -5
          else
            echo "✗ $dir missing"
          fi
        done

    - name: Test Frontend
      working-directory: ./frontend
      run: |
        echo "=== Frontend Testing ==="
        echo "Installing dependencies..."
        npm install
        echo "Running tests..."
        npm test -- --watchAll=false --passWithNoTests --verbose
      env:
        CI: true
        REACT_APP_API_URL: http://localhost:8000

    - name: Test LLM Query Service
      working-directory: ./llm-query-service
      run: |
        echo "=== LLM Query Service Testing ==="
        echo "Installing dependencies..."
        npm install
        echo "Running tests..."
        npm test -- --watchAll=false --passWithNoTests --verbose
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:password@localhost:5432/decigenie_test

    - name: Test Document Ingestion Service
      working-directory: ./document-ingestion
      run: |
        echo "=== Document Ingestion Service Testing ==="
        echo "Installing dependencies..."
        npm install
        echo "Running tests..."
        npm test -- --watchAll=false --passWithNoTests --verbose
      env:
        NODE_ENV: test
        DATABASE_URL: postgresql://postgres:password@localhost:5432/decigenie_test

  build:
    needs: test
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'

    - name: Build Frontend
      working-directory: ./frontend
      run: |
        echo "Building frontend..."
        npm install
        npm run build
        echo "Frontend build completed successfully"

    - name: Build Backend Services
      run: |
        echo "Building backend services..."
        cd llm-query-service && npm install && echo "LLM service dependencies installed"
        cd ../document-ingestion && npm install && echo "Document ingestion dependencies installed"
        echo "Backend services build completed successfully" 